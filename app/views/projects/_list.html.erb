<%
  #pre-load current user's memberships
  @memberships = User.current.memberships.inject({}) do |memo, membership|
    memo[membership.project_id] = membership.roles
    memo
  end
%>
<table class="projects-list list">
  <thead>
    <tr>
      <th style="text-align:left">
        <%= l(:field_name) %>
        <br>
        <input type=text name=filter-by-project-name id=filter-by-project-name class=filter>
      </th>
      <th><%= l(:label_role) %></th>
      <th><%= l(:label_user_plural) %></th>
      <th><%= l(:label_issue_plural) %></th>
      <th><%= l(:label_activity) %></th>
    </tr>
  </thead>
  <tbody>
<% project_tree(projects) do |project, level| %>
  <% css_classes = "#{cycle "odd", "even"} #{project.css_classes} #{level > 0 ? "idnt idnt-#{level}" : nil}" %>
  <tr class="<%= css_classes %>" id="project-line-<%= project.id %>">
    <td class="name project-more-toggle">
      <div class=contextual>
        <span class=more>[<%= l(:label_more).downcase %>]</span>
      </div>
      <span class="project-name">
        <%= link_to_project(project, {:action => 'show'}, :title => project.short_description) %>
      </span>
    </td>
    <td class=membership>
      <% if @memberships[project.id].present? %>
        <div class="am-i-member member">
          <%= @memberships[project.id].map(&:name).join("<br>").html_safe %>
        </div>
      <% else %>
        <div class="am-i-member not-member"><%= l(:label_role_non_member) %></div>
      <% end %>
    </td>
    <td class=users></td>
    <td class=issues>
      <span class="open_issues" title="<%= l(:label_open_issues_plural) %>"></span> /
      <span class="closed_issues" title="<%= l(:label_closed_issues_plural) %>"></span>
    </td>
    <td class=activity>
      <span class=barchart></span>
    </td>
  </tr>
  <tr class="<%= css_classes.gsub(/(even|odd) /,"even-odd-linked ") %> project-more">
    <td class="project-summary name" colspan=5>
      <div class=project-description>
        <%= textilizable project.description %>
      </div>
    </td>
  </tr>
<% end %>
  </tbody>
</table>


<%
#redmine doesn't uses updated_at but updated_on, which is not handled by AR#cache_key
user_key = "users/#{User.current.id}-#{User.current.updated_on.utc.to_s(:number)}"
cache ["project-statistics", user_key, Project.last, Time.now.to_i.div(15)] do %>
<script type=text/javascript>
<% summary = ProjectSummary.new(projects.map(&:id)) %>
cache = {
  <% projects.each do |project| %>
      <%= project.id %>: { stats: "<%= summary.activity_statistics[project.id].join(",") %>",
                           users: <%= summary.users_count[project.id].to_i %>,
                           open_issues: <%= summary.issues_open_count[project.id].to_i %>,
                           closed_issues: <%= summary.issues_closed_count[project.id].to_i %> },
  <% end %>
}
$(function() {
  var $p
<% projects.each do |project| %>
  $p = $("#project-line-<%=project.id%>")
  $p.find(".barchart").html(cache[<%=project.id%>].stats)
  $p.find(".users").html(cache[<%=project.id%>].users)
  $p.find(".open_issues").html(cache[<%=project.id%>].open_issues)
  $p.find(".closed_issues").html(cache[<%=project.id%>].closed_issues)
<% end %>
  //draw activity sparklines on projects/index page
  $(".barchart").peity("bar", { colours: ["#aaa"], min: 0, max: 10,
                                height:20, width: (27*(5+1)-1) })
})
</script>
<% end %>
