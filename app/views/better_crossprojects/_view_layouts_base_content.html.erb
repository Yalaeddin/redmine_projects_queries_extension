<% if @project.present? && User.current.allowed_to?(:add_issues, @project) -%>

<script type="text/javascript">
//<![CDATA[
var timer;
var elem = $$('#main-menu a.issues').first().up();
<%
@class = 'new-issue'
@class << ' selected' if params[:controller] == 'issues' && %w(new create).include?(params[:action])
-%>
var link = '<%= link_to '<span style="font-weight:bolder">+</span>',
                        {:controller => 'issues', :action => 'new', :project_id => @project},
                        :class => @class, :style => 'padding:4px 5px 8px' -%>';
var tab = new Element('li',{id:'new_issue_tab',style:'margin-left:-3px'}).update(link);
var hidden = <%= params[:controller] == 'issues' ? 'false' : 'true' %>;
if (hidden) { tab.hide(); }

function delayShowNewIssueTab() {
  timer = setTimeout('showNewIssueTab()',700);
}

function cancelNewIssueTab() {
  clearTimeout(timer);
}

function insertNewIssueTab() {
  elem.insert({after:tab});
}

function showNewIssueTab() {
  if (!tab.visible()) {
    Effect.BlindRight('new_issue_tab', {duration:0.3});
    Event.stopObserving(elem, 'mouseover', delayShowNewIssueTab);
    //Auto-hide is not activated for the moment...
    //Event.observe(elem.up(), 'mouseout', hideNewIssueTab);
  }
}

function hideNewIssueTab() {
  if (tab.visible()) {
    Effect.BlindLeft('new_issue_tab', {duration:0.3});
    Event.stopObserving(elem.up(), 'mouseout', hideNewIssueTab);
  }
}

Event.observe(elem, 'mouseover', delayShowNewIssueTab);
Event.observe(elem, 'mouseout', cancelNewIssueTab);
Event.observe(elem, 'click', cancelNewIssueTab);
Event.observe(window, 'dom:loaded', insertNewIssueTab);
//]]>
</script>

<% end -%>
